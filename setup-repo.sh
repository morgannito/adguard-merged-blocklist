#!/bin/bash

# Script pour configurer le d√©p√¥t AdGuard Merged Blocklist
# Usage: ./setup-repo.sh

set -e

echo "üöÄ Configuration du d√©p√¥t AdGuard Merged Blocklist..."

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages color√©s
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# V√©rifier si nous sommes dans le bon r√©pertoire
if [ ! -f "README.md" ] || [ ! -d ".github" ]; then
    print_error "Ce script doit √™tre ex√©cut√© depuis le r√©pertoire racine du projet blocklist"
    exit 1
fi

# Initialiser Git si n√©cessaire
if [ ! -d ".git" ]; then
    print_status "Initialisation du d√©p√¥t Git..."
    git init
    print_success "D√©p√¥t Git initialis√©"
else
    print_status "D√©p√¥t Git d√©j√† initialis√©"
fi

# Configurer Git
print_status "Configuration de Git..."
git config --local user.name "AdGuard Blocklist Bot"
git config --local user.email "action@github.com"

# Ajouter tous les fichiers
print_status "Ajout des fichiers au d√©p√¥t..."
git add .

# Cr√©er le commit initial
if git diff --staged --quiet; then
    print_warning "Aucun changement √† commiter"
else
    print_status "Cr√©ation du commit initial..."
    git commit -m "üéâ Initial commit: AdGuard Merged Blocklist Repository

üìã Fonctionnalit√©s:
- ‚úÖ Mise √† jour automatique quotidienne via GitHub Actions
- ‚úÖ Fusion de 10 sources de listes de blocage fiables
- ‚úÖ Compatible AdGuard Home, Pi-hole, uBlock Origin
- ‚úÖ D√©duplication automatique des r√®gles
- ‚úÖ Statistiques et monitoring int√©gr√©s
- ‚úÖ Documentation compl√®te d'utilisation

üîÑ Automatisation:
- Ex√©cution quotidienne √† 06:00 UTC
- G√©n√©ration automatique de statistiques
- Releases hebdomadaires automatiques
- Gestion d'erreurs et notifications

üõ°Ô∏è Sources incluses:
- AdGuard Base Filter (adware, antiadblock, elemhide, extensions, url)
- AdGuard Mobile Filter
- StevenBlack Hosts
- Someone Who Cares Hosts
- EasyList & EasyPrivacy

üìä Le fichier merged-blocklist.txt sera g√©n√©r√© automatiquement lors de la premi√®re ex√©cution."
    
    print_success "Commit initial cr√©√©"
fi

# Instructions pour la suite
echo ""
echo "üéØ Prochaines √©tapes:"
echo ""
echo "1. Cr√©ez un nouveau d√©p√¥t sur GitHub:"
echo "   - Nom: adguard-merged-blocklist"
echo "   - Description: Liste de blocage AdGuard fusionn√©e automatiquement - Mise √† jour quotidienne"
echo "   - Visibilit√©: Public"
echo "   - NE PAS initialiser avec README (nous avons d√©j√† les fichiers)"
echo ""
echo "2. Ajoutez l'origine GitHub et poussez:"
echo "   git remote add origin https://github.com/morgannito/adguard-merged-blocklist.git"
echo "   git branch -M main"
echo "   git push -u origin main"
echo ""
echo "3. Activez GitHub Actions:"
echo "   - Allez dans l'onglet 'Actions' de votre d√©p√¥t"
echo "   - Cliquez sur 'I understand my workflows, go ahead and enable them'"
echo ""
echo "4. Testez la premi√®re ex√©cution:"
echo "   - Allez dans Actions ‚Üí Update AdGuard Blocklist"
echo "   - Cliquez sur 'Run workflow' ‚Üí 'Run workflow'"
echo ""
echo "5. Votre liste sera disponible √†:"
echo "   https://raw.githubusercontent.com/morgannito/adguard-merged-blocklist/main/merged-blocklist.txt"
echo ""
print_success "Configuration termin√©e! üéâ"
echo ""
echo "üìñ Consultez USAGE.md pour les instructions d'int√©gration avec AdGuard Home, Pi-hole, etc."